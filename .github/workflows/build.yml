name: Run pipeline jobs
on: [push,pull_request]
jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Super-linter against the whole codebase
        uses: super-linter/super-linter@v5.7.2
        env:
          DEFAULT_BRANCH: main
          VALIDATE_KOTLIN: true
          VALIDATE_ALL_CODEBASE: true
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dependency-checks:
    runs-on: ubuntu-latest
    permissions: # The Dependency Submission API requires write permission
      contents: write
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v3
      - name: Run snapshot action
        uses: mikepenz/gradle-dependency-submission@v0.9.1

  unit-tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew test --no-daemon

  snyk:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for known vulnerabilities
        uses: snyk/actions/gradle@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
  
  sonar:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: build
        run: ./gradlew build
      - name: Test with Sonar
        run: ./gradlew assemble sonar --info
      - name: Import code coverage to Sonar
        run: ./gradlew test jacocoTestReport sonar
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
